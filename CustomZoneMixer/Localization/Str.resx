<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="root_modDescription" xml:space="preserve">
    <value>Adds 7 extra zones to the game, that can be customizable.</value>
  </data>
  <data name="ZM_DEFAULT_ZONE_TITLE" xml:space="preserve">
    <value>Zone #{0}</value>
  </data>
  <data name="ZM_ZONE_DESC_Z1" xml:space="preserve">
    <value>First configurable zone from Custom Zone Mixer Mod.
Currently supports:
</value>
  </data>
  <data name="ZM_ZONE_DESC_Z2" xml:space="preserve">
    <value>Second configurable zone from Custom Zone Mixer Mod.
Currently supports:
</value>
  </data>
  <data name="ZM_ZONE_DESC_Z3" xml:space="preserve">
    <value>Third configurable zone from Custom Zone Mixer Mod.
Currently supports:
</value>
  </data>
  <data name="ZM_ZONE_DESC_Z4" xml:space="preserve">
    <value>Fourth configurable zone from Custom Zone Mixer Mod.
Currently supports:
</value>
  </data>
  <data name="ZM_ZONE_DESC_Z5" xml:space="preserve">
    <value>Fifth configurable zone from Custom Zone Mixer Mod.
Currently supports:
</value>
  </data>
  <data name="ZM_ZONE_DESC_Z6" xml:space="preserve">
    <value>Sixth configurable zone from Custom Zone Mixer Mod.
Currently supports:
</value>
  </data>
  <data name="ZM_ZONE_DESC_Z7" xml:space="preserve">
    <value>Seventh configurable zone from Custom Zone Mixer Mod.
Currently supports:
</value>
  </data>
  <data name="ZM_EXPORT_DEFAULT_BTN" xml:space="preserve">
    <value>Export as Default</value>
  </data>
  <data name="ZM_IMPORT_DEFAULT_BTN" xml:space="preserve">
    <value>Import Defaults</value>
  </data>
  <data name="ZM_RESET_BTN" xml:space="preserve">
    <value>Use mod defaults</value>
  </data>
  <data name="ZM_ERROR_LOADING_DEFAULTS_TITLE" xml:space="preserve">
    <value>Error loading defaults</value>
  </data>
  <data name="ZM_ERROR_LOADING_DEFAULTS_MESSAGE" xml:space="preserve">
    <value>The file with default configurations (at &lt;color #FFFF00&gt;{0}&lt;/color&gt;) seems to be corrupted. This error was thrown while trying to load it:

&lt;color=#FF0000&gt;{1} - {2}

{3}&lt;/color&gt;

If you think this is a mod problem, please take a print of this window and post it at mod page.</value>
  </data>
  <data name="ZM_OK_BUTTON" xml:space="preserve">
    <value>Okay...</value>
  </data>
  <data name="ZM_OPEN_FOLDER_ON_EXPLORER_BUTTON" xml:space="preserve">
    <value>Open folder in explorer</value>
  </data>
  <data name="ZM_GO_TO_MOD_PAGE_BUTTON" xml:space="preserve">
    <value>Go to mod page at Workshop</value>
  </data>
  <data name="ZM_GHOST_MODE_OPTION" xml:space="preserve">
    <value>Clean this mod from a savegame.</value>
  </data>
  <data name="ZM_GHOST_MODE_OPTION_TOOLTIP" xml:space="preserve">
    <value>Load a city once with this enabled to be able to play that city without this mod.</value>
  </data>
  <data name="ZM_GHOST_MODE_MODAL_TITLE" xml:space="preserve">
    <value>Removal applied!</value>
  </data>
  <data name="ZM_GHOST_MODE_MODAL_MESSAGE" xml:space="preserve">
    <value>All extra zones were successfully removed from this city. Now, it's safe to save this city and play it without this mod. Rules applied:

&lt;color=#FFFF00&gt;	-All zones with a building were painted with the building zone default type
	-All marked but not built zones were marked as one of their allowed zones in precedence order Res -&gt; Com -&gt; Ind -&gt; Off (low density first too)&lt;/color&gt;

&lt;color #FF0000&gt;NOTE THAT IS NOT SAFE TO CONTINUE PLAYING THIS CITY BEFORE SAVING IT, DISABLING THIS MOD, REBOOTING THE GAME AND LOADING THE CITY AGAIN!&lt;/color&gt;</value>
  </data>
  <data name="czm_copyToClipboard" xml:space="preserve">
    <value>Copy to clipboard</value>
  </data>
</root>